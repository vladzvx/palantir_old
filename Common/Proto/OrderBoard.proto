syntax = "proto3";

option csharp_namespace = "Common";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package orders;

service OrderBoard {
  rpc GetOrder (OrderRequest) returns (Order);
  rpc GetOrder2 (OrderRequest) returns (Order);
  rpc PostOrder (Order) returns (google.protobuf.Empty);
  rpc GetChatInfo (ChatInfoRequest) returns (ChatInfo);
  rpc PostReport (Report) returns (google.protobuf.Empty);
  rpc PostEntity (Entity) returns (google.protobuf.Empty);
  rpc StreamMessages (stream Message) returns (google.protobuf.Empty);
  rpc DownloadMessages (google.protobuf.Empty) returns (stream SavedMessage);
}

message Report{
	string SourceId= 1;
	google.protobuf.Timestamp Timestamp = 2;
	string Message = 3;
	ReportType Type = 4;
}

enum ReportType {
	Ban = 0;
	FloodWait = 1;
	Exception = 2;
	GetOrder = 3;
}

message OrderRequest{
	string Finder = 1;
}

message Entity{
	int64 Id = 1;
	int64 PairId = 2;
	string Link = 3;
	string PairLink = 4;
	string FirstName = 5;
	string LastName = 6;
	string Desc = 7;
	EntityType Type = 8;
	string Finder = 9;
}

enum EntityType{
	User = 0;
	Channel = 1;
	Group = 2;
	Stop = 3;
}

message ChatInfo{
	int64 Id = 1;
	int64 Offset = 2;
}

message ChatInfoRequest{
	int64 Id = 1;
}

message SavedMessage{
	google.protobuf.Timestamp Timestamp = 1;
	string Text = 2;
	string Media = 3;
	int64 Id = 4;
	int64 FromId = 5;
	int64 ForwardFromId = 6;
	int64 ForwardFromMessageId = 7;
	int64 ChatId = 8;
	int64 MediagroupId = 9;
	int64 ReplyTo = 10;
	int64 ThreadStart = 11;
	bool FromExistingUser = 12;
	string Formating = 13;
	int64 MessageDBId = 14;
	string FormatingCostyl = 15;
	string MediaCostyl = 16;
}


message Message{
	google.protobuf.Timestamp Timestamp = 1;
	string Text = 2;
	string Media = 3;
	int64 Id = 4;
	int64 FromId = 5;
	int64 ForwardFromId = 6;
	int64 ForwardFromMessageId = 7;
	int64 ChatId = 8;
	int64 MediagroupId = 9;
	int64 ReplyTo = 10;
	int64 ThreadStart = 11;
	bool FromExistingUser = 12;
	repeated Formating Formating = 13;
}

message Formating{
	FormatingType Type = 1;
	int32 Length = 2;
	int32 Offset = 3;
	string Content = 4;
}

enum FormatingType{
	Bold = 0;
	Strike = 1;
	Italic = 2;
	Underline = 3;
	Code = 4;
	Pre = 5;
	TextMention = 6;
	TextLink = 7;
}


message Order {
	int64 OrderId = 1;
	int64 Id = 2;
	int64 PairId = 3;
	int64 Offset = 4;
	string Link = 5;
	string PairLink = 6;
	OrderType Type = 7;
	int32 RedirectCounter = 8;
	int32 Time = 9;
	int64 PairOffset = 10;
	repeated string Finders = 11;
}

enum OrderType{
	Empty = 0;
	History = 1;
	GetFullChannel = 2;
	Sleep = 3;
	Pair = 4;
	Executed = 5;
	Container = 6;
}